Parameters:
  name:         EventCombine
  comment:      "Top level calorimeter chain"
  nEvents:      $nevents
  OutDir:       /sphenix/lustre01/sphnxpro/scratch
  pfnList:      filelist
  nFilesPerJob: 12
  macro:        Fun4All_Combiner.C
  memory:       2048
  cpuTimePerEvent: 75000
  maxAttempt:   3

Resources:
  - file: /sphenix/u/sphnxpro/macros/eventcombine/Fun4All_Combiner.C

OutputDataSets:
  - name: EventCombine/outDS
    filelist:
      - "regex|beam_emcal*"

JobCommands: |-
  # Initialize environment... using the "build" environment, unless it
  # was not specified
  if [ -z ${build+x} ]; then 
     echo "build is unset [default to latest]"
     source /opt/sphenix/core/bin/sphenix_setup.sh -n 
  else 
     echo "build is set to ${build}"
     source /opt/sphenix/core/bin/sphenix_setup.sh -n ${build}
  fi  

  echo ..........................................................................
  echo Running ${name} ${runNumber} $@
  echo ..........................................................................

  # Input is a pfnlist... but really, we ignore it.  The sebXX.list files should be
  # packed and ready to go...

  # Make sure we keep each run in its own scratch space on lustre
  target=${OutDir}/${runNumber}
  mkdir ${target}

  # Run fun4all
  root -q -b ${macro}\(${nEvents},\"seb00.list\",\"seb01.list\",\"seb02.list\",\"seb03.list\",\"seb04.list\",\"seb05.list\",\"seb06.list\",\"seb07.list\",\"hcaleast.list\",\"hcalwest.list\",\"zdc.list\",\"mbd.list\",\"${target}\"\) >& fun4all.log

  # Parse logfile and build list of outputs

  # Link back all of the output files so that PanDA can find them / and handle
  # the transfer to rucio

  echo "Scratch directory listing:"
  ls -lh ${target}/

  ln -s ${target}/*.prdf .
  echo "List the links to the scratch files:"
  ls -l *.prdf

  DBTAG=${dbtag:-ptid${PanDA_TaskID}}
  BUILDTAG=${build/./}
  FILETAG=${BUILDTAG}_${DBTAG}


  for fname in *.prdf
  do
      mv ${fname} ${fname/beam_emcal/beam_emcal_${FILETAG}}
  done

  echo "List the transformed links:"
  ls -l *.prdf

  if [ ! -f *-0000.prdf ]; then
  echo "================================================================"
  echo "WARNING: Missing the 0th PRDF output"
  echo "================================================================"
  fi


  cat fun4all.log | awk '/Fun4AllRolloverFileOutStream: opening new file/{ print $5; }' > produced.log

  produced=(`cat produced.log`)      
  cataloged=( `ls beam_emcal_*.prdf` )
  echo ${#produced[@]} ${#cataloged[@]}

  addmetadata shrek_num_files_produced ${#produced[@]} 
  addmetadata shrek_num_files_cataloged ${#cataloged[@]}

  if [[ ! ${#produced[@]} -eq  ${#cataloged[@]} ]]; then
  echo "================================================================"
  echo "WARNING: Number of produced and cataloged files do not match."
  echo "================================================================"
  # Set a non zero status code to throw this to PanDA
  shrek_status_code=1
  fi

  stash_job_log ${target}/





